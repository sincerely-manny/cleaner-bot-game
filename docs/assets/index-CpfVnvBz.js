var e=Object.defineProperty,t=(t,s,r)=>(((t,s,r)=>{s in t?e(t,s,{enumerable:!0,configurable:!0,writable:!0,value:r}):t[s]=r})(t,"symbol"!=typeof s?s+"":s,r),r);import{p as s}from"./phaser-C2_wa_Fb.js";!function(){const e=document.createElement("link").relList;if(!(e&&e.supports&&e.supports("modulepreload"))){for(const e of document.querySelectorAll('link[rel="modulepreload"]'))t(e);new MutationObserver((e=>{for(const s of e)if("childList"===s.type)for(const e of s.addedNodes)"LINK"===e.tagName&&"modulepreload"===e.rel&&t(e)})).observe(document,{childList:!0,subtree:!0})}function t(e){if(e.ep)return;e.ep=!0;const t=function(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),"use-credentials"===e.crossOrigin?t.credentials="include":"anonymous"===e.crossOrigin?t.credentials="omit":t.credentials="same-origin",t}(e);fetch(e.href,t)}}();const r=375,i=812;class a extends s.Scene{constructor(){super("Game"),t(this,"ground"),t(this,"character"),t(this,"cursors"),t(this,"touch"),t(this,"puddle"),t(this,"charIsOverlappingPuddle"),t(this,"meteors",[]),this.charIsOverlappingPuddle=!1}create(){var e,t,s,a;this.add.image(187.5,406,"background").setScale(.75),this.add.image(187.5,770,"horizon").setOrigin(.5,1),this.ground=this.physics.add.image(187.5,i,"ground"),this.ground.setOrigin(.5,1).setImmovable(!0).setVelocityX(-300).setSize(1706,5).setOffset(0,60),this.character=this.physics.add.sprite(87.5,552,"character"),this.character.setOrigin(.5,1).setBounce(.1).setGravityY(500).setFriction(0,0).setDepth(1),null==(e=this.character.body)||e.setSize(70,90).setOffset(65,80),this.anims.create({key:"idle",frames:[{key:"character",frame:0}]}),this.anims.create({key:"up",frames:[{key:"character",frame:1}]}),this.anims.create({key:"down",frames:[{key:"character",frame:2}]}),this.anims.create({key:"cleaning",frames:[{key:"character",frame:3}]}),this.physics.world.setBounds(0,0,r,742),this.character.setCollideWorldBounds(!0),this.cursors=null==(t=this.input.keyboard)?void 0:t.createCursorKeys(),this.touch=this.input.pointer1,this.input.on("pointerdown",(()=>{this.goUp()})),this.input.on("pointerup",(()=>{this.goDown()})),null==(s=this.cursors)||s.space.on("down",(()=>{this.goUp()})),null==(a=this.cursors)||a.space.on("up",(()=>{this.goDown()}))}goUp(){this.character.setAccelerationY(-300),this.character.setVelocityY(-500)}goDown(){this.character.setAccelerationY(0),this.character.setVelocityY(0)}update(){var e,t;const s=null==(e=this.character.body)?void 0:e.velocity.y;s&&s<-100?this.character.anims.play("up"):s&&s>100?this.character.anims.play("down"):this.charIsOverlappingPuddle?this.character.anims.play("cleaning",!0):this.character.anims.play("idle");const i=null==(t=this.ground.body)?void 0:t.position;if(i&&i.x<-1250){this.ground.setX(400);const e=50;Math.round(100*Math.random())<e&&(this.puddle&&this.puddle.destroy(),this.puddle=this.physics.add.image(r,712,"puddle"),this.puddle.setOrigin(0,1).setFriction(1).setGravityY(500).setSize(70,40),this.physics.add.collider(this.ground,this.puddle),this.physics.add.overlap(this.character,this.puddle,(()=>{this.charIsOverlappingPuddle||(this.charIsOverlappingPuddle=!0,this.tweens.add({targets:this.puddle,alpha:{from:1,to:0},duration:500,repeat:0}))})))}if(this.charIsOverlappingPuddle&&!this.physics.overlap(this.character,this.puddle)&&(this.charIsOverlappingPuddle=!1),Math.round(100*Math.random())<1){const e=this.physics.add.image(r,512*Math.random()+200,"meteor");e.setOrigin(0,.5).setVelocityX(0-(200*Math.random()+100)).body.setSize(40,40,!0).setOffset(20,20),this.meteors.push(e),this.physics.add.collider(this.character,e,(()=>{this.character.tint=16711680,this.character.setTint(16733525),this.scene.pause()}))}}}class o extends s.Scene{constructor(){super("Preload")}preload(){this.load.setPath("assets"),this.load.image("background","bg.png"),this.load.svg("ground","ground.svg"),this.load.svg("horizon","horizon.svg"),this.load.svg("meteor","meteor.svg"),this.load.spritesheet("character","char.svg",{frameWidth:200,frameHeight:200}),this.load.svg("puddle","puddle.svg")}create(){this.scene.start("Game")}}const c={type:Phaser.AUTO,width:r,height:i,parent:"game-container",backgroundColor:"#44ADFA",scale:{mode:Phaser.Scale.ENVELOP,autoCenter:Phaser.Scale.CENTER_BOTH},physics:{default:"arcade",arcade:{gravity:{x:0,y:0}}},scene:[o,a]};new s.Game(c);
